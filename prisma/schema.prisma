// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/c                                                li/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum JenisBarang {
  Barang
  Jasa
  Menu
  Paket
}

model User {
  username     String  @id @db.VarChar(50)
  password     String  @db.VarChar(200)
  refreshToken String? @map("refresh_token") @db.Text
  contactId    Int     @unique() @map("contact_id")

  contact Contact @relation(fields: [contactId], references: [id])

  @@map("users")
}

model Contact {
  id        Int        @id @default(autoincrement())
  nama      String     @db.VarChar(200)
  alamat    String?    @db.VarChar(500)
  email     String?    @db.VarChar(500)
  noHp      String?    @map("no_hp") @db.VarChar(20)
  user      User?
  supplier  Supplier?
  pelanggan Pelanggan?

  @@map("contacts")
}

model KategoriBarang {
  id          Int         @id @default(autoincrement())
  nama        String      @db.VarChar(200)
  jenisBarang JenisBarang @default(Barang) @map("jenis_barang")
  barangs     Barang[]

  @@map("kategori_barangs")
}

model SubKategoriBarang {
  id          Int         @id @default(autoincrement())
  nama        String      @db.VarChar(200)
  jenisBarang JenisBarang @default(Barang) @map("jenis_barang")
  barangs     Barang[]

  @@map("sub_kategori_barang")
}

model SatuanBarang {
  id          Int         @id @default(autoincrement())
  nama        String      @db.VarChar(200)
  jenisBarang JenisBarang @default(Barang) @map("jenis_barang")

  barangs       Barang[]
  gudangs       DetailGudang[]
  detailSatuans DetailSatuan[]

  @@map("satuan_barangs")
}

model DetailSatuan {
  barangId Int          @map("barang_id")
  barang   Barang       @relation(fields: [barangId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  satuanId Int          @map("satuan_id")
  satuan   SatuanBarang @relation(fields: [satuanId], references: [id])
  amount   Decimal      @db.Decimal(18, 3)

  @@id([barangId, satuanId])
  @@map("detail_satuans")
}

model Rak {
  id   Int    @id @default(autoincrement())
  nama String @db.VarChar(200)

  @@map("raks")
}

model Barang {
  id            Int               @id() @default(autoincrement())
  nama          String            @db.VarChar(500)
  jenisBarang   JenisBarang       @default(Barang) @map("jenis_barang")
  satuanId      Int               @map("satuan_id")
  satuan        SatuanBarang      @relation(fields: [satuanId], references: [id])
  kategoriId    Int               @map("kategori_id")
  kategories    KategoriBarang    @relation(fields: [kategoriId], references: [id])
  subkategoriId Int               @map("subkategori_id")
  subkategories SubKategoriBarang @relation(fields: [subkategoriId], references: [id])

  hpp            Decimal   @default(0)
  hargaBeliAkhir Decimal   @default(0) @map("harga_beli_akhir")
  hargaBeli_3    Decimal   @default(0) @map("harga_beli_3")
  hargaJual_1    Decimal   @default(0) @map("harga_jual_1")
  hargaJual_2    Decimal   @default(0) @map("harga_jual_2")
  hargaJual_3    Decimal   @default(0) @map("harga_jual_3")
  barcode        String    @unique() @db.VarChar(100)
  expired        DateTime? @default(now())
  diskonRp       Decimal   @default(0) @map("diskon_rp")
  diskonPersen   Decimal   @default(0) @map("diskon_persen")
  jumlahStok     Decimal   @default(0) @map("jumlah_stok")
  jumlahAwal     Decimal   @default(0) @map("jumlah_awal")
  keterangan     String    @db.Text
  isActive       Boolean   @default(true) @map("is_active")

  supplierContactId Int      @map("supplier_contact_id")
  supplier          Supplier @relation(fields: [supplierContactId], references: [contactId])

  gudangs       DetailGudang[]
  detailSatuans DetailSatuan[]

  @@map("barangs")
}

model Supplier {
  contactId       Int     @id() @map("contact_id")
  contact         Contact @relation(fields: [contactId], references: [id])
  saldoHutang     Decimal @default(0) @map("saldo_hutang")
  maxHutang       Decimal @default(0) @map("max_hutang")
  saldoAwalHutang Decimal @default(0) @map("saldo_awal_hutang")
  jatuhTempo      Decimal @default(0) @map("jatuh_tempo")

  barangs Barang[]

  @@map("suppliers")
}

model Gudang {
  id         Int     @id() @default(autoincrement())
  nama       String  @db.VarChar(500)
  alamat     String? @db.VarChar(500)
  keterangan String? @db.Text
  isActive   Boolean @default(true) @map("is_active")

  barangs DetailGudang[]

  @@map("gudangs")
}

model DetailGudang {
  barangId      Int     @map("barang_id")
  gudangId      Int     @map("gudang_id")
  satuanId      Int     @map("satuan_id")
  jumlah        Decimal @default(0)
  jumlahMinimal Decimal @default(0) @map("jumlah_minimal")
  berat         Decimal @default(0)

  satuans SatuanBarang @relation(fields: [satuanId], references: [id], onUpdate: Cascade)
  barangs Barang       @relation(fields: [barangId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  gudangs Gudang       @relation(fields: [gudangId], references: [id], onUpdate: Cascade)

  @@id([barangId, gudangId, satuanId])
  @@map("detail_gudangs")
}

model JenisPelanggan {
  id        Int     @id @default(autoincrement())
  nama      String  @unique() @db.VarChar(200)
  isDefault Boolean @default(false) @map("is_default") @db.Boolean

  pelanggans Pelanggan[]

  @@map("jenis_pelanggans")
}

enum JenisPajak {
  None
  Inclusive
  Exclusive
}

model Pelanggan {
  contactId        Int        @id @map("contact_id")
  jenisPelangganId Int        @map("jenis_pelanggan_id")
  isCanCredit      Boolean    @default(false) @map("is_can_credit")
  saldoPiutang     Decimal    @default(0) @map("saldo_piutang")
  maxPiutang       Decimal    @default(0) @map("max_piutang")
  saldoAwalPiutang Decimal    @default(0) @map("saldo_awal_piutang")
  limitHariPiutang Int        @default(0) @map("limit_hari_piutang")
  jatuhTempo       Int        @default(0) @map("jatuh_tempo")
  jenisPajak       JenisPajak @default(None) @map("jenis_pajak")

  contact        Contact        @relation(fields: [contactId], references: [id], onUpdate: Cascade)
  jenisPelanggan JenisPelanggan @relation(fields: [jenisPelangganId], references: [id], onUpdate: Cascade)

  @@map("pelanggans")
}

enum TypeAkun {
  AkunKas
  NonKas
}

enum StatusArusKas {
  None
  KasOperasional
  KasInvestasi
  KasPendanaan
}

model Akun {
  kode          String        @id @db.Char(6)
  kodeAkunInduk String?       @map("kode_akun_induk") @db.Char(6)
  nama          String        @db.VarChar(200)
  levelAkun     Int           @map("level_akun")
  saldoAwal     Decimal       @default(0) @map("saldo_awal")
  typeAkun      TypeAkun      @default(NonKas) @map("type_akun")
  statusArusKas StatusArusKas @default(None) @map("status_arus_kas")
  isActive      Boolean       @default(true) @map("is_active")

  akunInduk      Akun?  @relation("AkunAnakInduk", fields: [kodeAkunInduk], references: [kode])
  akunAnak       Akun[] @relation("AkunAnakInduk")
  kas            Kas[]  @relation("AkunKas")
  kasKartuKredit Kas[]  @relation("AkunKasKartuKredit")

  @@map("akuns")
}

model Kas {
  id                  Int     @id @default(autoincrement())
  kodeAkun            String  @map("kode_akun") @db.Char(6)
  akun                Akun    @relation("AkunKas", fields: [kodeAkun], references: [kode])
  kodeAkunKartuKredit String? @map("kode_akun_kartu_kredit") @db.Char(6)
  akunKartuKredit     Akun?   @relation("AkunKasKartuKredit", fields: [kodeAkunKartuKredit], references: [kode])
  nama                String  @db.VarChar(200)
  nomorRekening       String? @map("nomor_rekening") @db.VarChar(50)
  pemilik             String? @db.VarChar(200)
  saldoKas            Decimal @default(0) @map("saldo_kas")
  keterangan          String? @db.Text
  isActive            Boolean @default(true) @map("is_active")

  @@map("kas")
}
